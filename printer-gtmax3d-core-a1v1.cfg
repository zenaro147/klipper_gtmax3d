# Elaborado e testado por @zenaro147

# Aquivo de configuração para a GTMax Core A1 v1.
# Esta configuração é baseada na impressora usando toda eletronica original.
# Nesse código consta apenas um upgrade, um sensor de filamento, já que esse modelo foi lançado sem tal funcionalidade.
# Essa configuração foi baseada no Klipper com a interface Mainsail
# Antes de usar, recomendo recalibrar o PID da mesa e da extrusora, usando os comandos "PID_CALIBRATE HEATER=heater_bed TARGET=110" e "PID_CALIBRATE HEATER=extruder TARGET=240"
# Caso necessário ajuste também o offset do probe em relação ao bico, seguindo a documentacao https://www.klipper3d.org/Probe_Calibrate.html. Lembre de mudar o "home_xy_position", "mesh_min" e "mesh_max" caso faça isso e gere valores diferentes 

[include mainsail.cfg]
[include timelapse.cfg] ; Habilita modulo de timelapse, caso queira colocar uma webcam dentro da impressora

[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE5
position_endstop: -5
position_min: -5
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PJ1
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
position_max: 250
endstop_pin: probe:z_virtual_endstop
position_min: -5
                    
[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 8.547 #Valor calculado baseado no M92 do EEPROM: rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm> /// 200 * 16 / 374.40 - https://www.klipper3d.org/Rotation_Distance.html
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
#control: pid    ;Valores da EEPROM original
#pid_Kp: 32.81   ;Valores da EEPROM original
#pid_Ki: 3.84    ;Valores da EEPROM original
#pid_Kd: 70.15   ;Valores da EEPROM original
min_temp: 0
max_temp: 250
max_extrude_only_velocity: 100
max_extrude_only_accel: 3000
min_extrude_temp: 150
pressure_advance: 0.839 ;Filamento Nude Gtmax 3d ABS - https://www.klipper3d.org/Pressure_Advance.html

[fan]
pin: PH6

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
#control: watermark
min_temp: 0
max_temp: 130

[safe_z_home]
home_xy_position: 162, 139  ;Visto que a mesa tem 300x200, ao aplicar o offset, o probe mede em 150x100
speed: 50
z_hop: 15

[probe]
pin: ^PD3
#z_offset: 4.350   ;Valores originais
#x_offset: -18     ;Valores originais
#y_offset: -43     ;Valores originais
x_offset: -12      ;Novos valores após medicao seguindo a documentacao https://www.klipper3d.org/Probe_Calibrate.html
y_offset: -39      ;Novos valores após medicao seguindo a documentacao https://www.klipper3d.org/Probe_Calibrate.html
samples: 2

[bed_mesh]
#mesh_min: 27, 63      ;Valores originais
#mesh_max: 295, 193    ;Valores originais
mesh_min: 15, 24       ;Adaptado para offset do probe
mesh_max: 283, 154     ;Adaptado para offset do probe
probe_count: 5, 4      ;Original é 3x3, mas alterei para 5x4 (medição de 20 pontos)
horizontal_move_z: 10  ;Dependendo do desnivel, o valor padrao pode ser pouco. 10 é um valor seguro
algorithm: bicubic

[display_status]

[display]
lcd_type: hd44780
rs_pin: EXP1_4
e_pin: EXP1_3
d4_pin: EXP1_5
d5_pin: EXP1_6
d6_pin: EXP1_7
d7_pin: EXP1_8
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
kill_pin: ^!EXP2_8

[output_pin BEEPER_pin]
pin: EXP1_1
pwm: True
value: 0.
shutdown_value: 0
cycle_time: 0.001

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[board_pins]
aliases:
    # Common EXP1 header found on many "all-in-one" ramps clones
    EXP1_1=PC0, EXP1_3=PH0, EXP1_5=PA1, EXP1_7=PA5, EXP1_9=<GND>,
    EXP1_2=PC2, EXP1_4=PH1, EXP1_6=PA3, EXP1_8=PA7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB3, EXP2_3=PC6, EXP2_5=PC4, EXP2_7=PL0, EXP2_9=<GND>,
    EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=PG0, EXP2_10=<RST>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi"

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 2000 #4300 no maximo segundo o teste de resonancia com acelerometro
max_z_velocity: 50
max_z_accel: 1000
#max_velocity: 100
#max_accel: 1500
#max_z_velocity: 20
#max_z_accel: 100
square_corner_velocity: 1

# Habilita M118 - Mostrar mensagem no Console
[respond]

# Macro para simular o G29 original
[gcode_macro G29]
gcode:
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  G1 Z10 F12000
  G1 X8 Y35
  G1 Z1 
  G1 Z10

######################################################################
# MCU secundário (Raspberry Pi) - Opcional, porém recomendo para adição de sensores sem mexer na RAMPS
######################################################################
[mcu rpi]
serial: /tmp/klipper_host_mcu

######################################################################
# Upgrades na impressora
######################################################################
# Adicionado acelerometro ADXL345 para medição da vibração do carro. Util para diminuir o "ghosting" em velocidades altas 
# https://www.klipper3d.org/Measuring_Resonances.html
[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 100, 20  # Realiza o teste no centro da mesa. Também é possível alterar esses valores para outros.

# Valores usados na comepensação da vibração. (Foi usado os dados do acelerometro)
# Para medir manualente: https://www.klipper3d.org/Resonance_Compensation.html
[input_shaper]
shaper_freq_x: 99.6
shaper_type_x: ei
shaper_freq_y: 76.8
shaper_type_y: 3hump_ei

# Habilita modulo de probe manual
[manual_probe]

# Suporte para comandos gcode arc (G2/G3)
[gcode_arcs]
resolution: 0.5

# Sensor de filamento - O codigo não carrega o filamento sozinho, necessário usar o botão de macro no Mainsail ou a opção no LCD (Menu > Filament > Load Filament)
# Fiz essa alteração por conta que o código também era executado caso a impressora esteja em standby
[pause_resume]

[filament_switch_sensor e0_sensor]
pause_on_runout: True
switch_pin: ^!PK1
runout_gcode:
    REMOVE_FILAMENT
#insert_gcode:
#    INSERT_FILAMENT
event_delay: 3

# Comando M600 para troca de filamento
[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    REMOVE_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state

# Comando M0 para Pausa
[gcode_macro M0]
gcode:
    SAVE_GCODE_STATE NAME=M0_state
    PAUSE
    RESTORE_GCODE_STATE NAME=M0_state

# Suporte ao gcode M486 (cancelar objetos) - Util caso imprima vários objetos e algum deles de problema
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

######################################################################
# Menus customizadas LCD
######################################################################
# Adiciona opção no LCD para carregar o filamento
[menu __main __filament __loadfil]
type: command
name: Load Filament
gcode:
    INSERT_FILAMENT

# Adiciona opção no LCD para revmover o filamento
[menu __main __filament __removefil]
type: command
name: Remove Filament
gcode:
    REMOVE_FILAMENT

# Muda opção para preparar PLA
[menu __main __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S65
    M104 S235

[menu __main __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S235

[menu __main __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S65

# Muda opção para preparar ABS
[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S110
    M104 S240

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S240

# Muda opção do PID
[menu __main __setup __tuning __hotend_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=240 WRITE_FILE=1

[menu __main __setup __tuning __hotbed_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: Tune Hotbed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=110 WRITE_FILE=1

######################################################################
# Macros customizadas
######################################################################
# Cria variaveis globais com as temperaturas do Hotend e da Mesa (assim o Klipper sabe em qual temperatura deve voltar a imprimir)
[gcode_macro PRINTER_TEMPS_VALUE]
variable_hotend0_temp: 0
variable_hotbed0_temp: 0
variable_hotend_temp: 0
variable_hotbed_temp: 0
gcode:
  M118 Valores Gravados

# Imprime no console os valores salvos das variaveis de temperatura
[gcode_macro PRINT_STORED_VARS_TEMPS]
gcode:
  M118 Temp Extrusor camada 0 = {printer["gcode_macro PRINTER_TEMPS_VALUE"].hotend0_temp}
  M118 Temp Mesa camada 0 = {printer["gcode_macro PRINTER_TEMPS_VALUE"].hotbed0_temp}
  M118 Temp Extrusor = {printer["gcode_macro PRINTER_TEMPS_VALUE"].hotend_temp}
  M118 Temp Mesa = {printer["gcode_macro PRINTER_TEMPS_VALUE"].hotbed_temp}

# Le os valores no parametro (enviados no START_PRINT) e salva elas
[gcode_macro SET_PRINTER_TEMPS_VALUE]
gcode:
  {% set BED_TEMP0 = params.BED_TEMP0|default(110)|float %}
  {% set EXTRUDER_TEMP0 = params.EXTRUDER_TEMP0|default(240)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(110)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(233)|float %}
  SET_GCODE_VARIABLE MACRO=PRINTER_TEMPS_VALUE VARIABLE=hotend0_temp VALUE={BED_TEMP0}
  SET_GCODE_VARIABLE MACRO=PRINTER_TEMPS_VALUE VARIABLE=hotbed0_temp VALUE={EXTRUDER_TEMP0}
  SET_GCODE_VARIABLE MACRO=PRINTER_TEMPS_VALUE VARIABLE=hotend_temp VALUE={BED_TEMP}
  SET_GCODE_VARIABLE MACRO=PRINTER_TEMPS_VALUE VARIABLE=hotbed_temp VALUE={EXTRUDER_TEMP}
  M118 Valores de temperatura salvos!

# Start Print e End Print
# Altere no seu fatiador os G-CODE de inicio e fim da impressão para START_PRINT e END_PRINT.
# - BED_TEMP0 = Temepratura da mesa na camada 0
# - EXTRUDER_TEMP0 = Temepratura do extrusor na camada 0
# - BED_TEMP = Temepratura da mesa nas demais camadas 
# - EXTRUDER_TEMP = Temepratura do extrusor nas demais camadas
# Exemplo Cura: 
#               G-CODE INICIAL: START_PRINT BED_TEMP0={material_bed_temperature_layer_0} EXTRUDER_TEMP0={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature} EXTRUDER_TEMP={material_print_temperature}
#               G-CODE FINA: END_PRINT
[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP0 = params.BED_TEMP0|default(110)|float %}
  {% set EXTRUDER_TEMP0 = params.EXTRUDER_TEMP0|default(240)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(110)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(233)|float %}
  SET_PRINTER_TEMPS_VALUE BED_TEMP0={BED_TEMP0} EXTRUDER_TEMP0={EXTRUDER_TEMP0} BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP}
  M190 S{BED_TEMP0} ; AQUECE MESA PARA A TEMPERATURA DA PRIMEIRA CAMADA
  M109 S{EXTRUDER_TEMP0} ; AQUECE EXTRUSOR PARA A TEMPERATURA DA PRIMEIRA CAMADA
  M402
  G28 ; HOME GERAL
  M400
  G29 ; AUTO NIVELAMENTO
  M400
  G92 E0; RESETA EXTRUSOR
  G1 X0 Y0 Z0.7 F10000 ; VAI PARA PONTO DE PURGA
  G1 E20 F150; FAZ A PURGA
  G92 E0;  RESETA EXTRUSOR
  G1 E-4; RETIRA PRESSAO DO BICO
  G1 Z10; SOBE O BICO
  G1 X0 Y30 F10000; MOVIMENTO PRA SOLTAR PURGA

[gcode_macro END_PRINT]
gcode:
  G92 E0; RESETA EXTRUSOR
  G1 E-4; RETIRA PRESSAO DO BICO
  M104 S0 ; DESLIGA AQUECIMENTO DO BICO
  M140 S0 ; DESLIGA AQUECIMENTO DA MESA
  G1 X0
  G1 Y200
  M84 ; DESLIGA MOTORES
  M300 S4 P500 ; GERA BEEP

# Cancelar Impressão (comando customizado)
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
   #https://klipper.info/macro-examples-1/aboms-cancel_print
   M220 S100 ; Reset Speed factor override percentage to default (100%)
   M221 S100 ; Reset Extrude factor override percentage to default (100%)
   G91 ; Set coordinates to relative
   {% if printer.extruder.temperature >= 170 %}
      G1 F1800 E-3; Retract filament 3 mm to prevent oozing
   {% endif %}
   G90 ; Set coordinates to absolute
   {% if printer.toolhead.homed_axes == "xyz" %}
   G0 X0 Y100 F4000
   TURN_OFF_HEATERS
   {% endif %}
   M84 ; DESLIGA MOTORES
   M106 S0 ; DESLIGA VENTILADOR
   CANCEL_PRINT_BASE

[gcode_macro REMOVE_FILAMENT]
gcode:
    {% if printer.pause_resume.is_paused == true %}
    G91
    G90
    G1 X150 Y0 F12000
    M400
    G1 X0 Y100 F3600
    M400
    {% endif %}
    M83
    {% if printer.extruder.temperature < 200 %}
    M109 S200 ;Seta e espera temperatura caso a extrusora não esteja quente
    {% else %}
    M104 S200
    {% endif %}
    M117 Retirando Filamento
    G1 E50 F300
    M400
    M109 S200
    M104 S170
    M117 Retirando Filamento
    G1 E-50 F200 ;Retrai o Filamento Devagar
    G1 E-50 F200 ;Retrai o Filamento Devagar
    M400
    M109 S170
    M117 Retirando Filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    G1 E-50 F1200 ;Retira o resto do filamento
    M400
    M117 Carregar Filamento
    M300 S4 P500
    M400
    M104 S0
    M117 Carregar Filamento
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0 ;Permite desligar o Stepper da extrusora. Necessário pois esse script precisa que o filamento seja carregado até a "presilha" que segura o tubo
	
[gcode_macro INSERT_FILAMENT]
gcode:
    {% set cur_layer = printer.print_stats.info.current_layer %}
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1  ;Liga novamente o Stepper da extrusora.
    M83
    M117 EsperandoTemperatura
    {% if printer.extruder.temperature < 170 %}
    M109 S170 ;Seta e espera temeperatura caso a extrusora não esteja quente
    {% endif %}
    M104 S233
    M117 Carregando Filamento
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    G1 E50 F1200  ;Carrega o filamento novo
    M400
    G1 E50 F300 ;Carrega o filamento novo
    G1 E50 F300 ;Carrega o filamento novo
    M400
    {% if cur_layer <= 0 %}
    M109 S{printer["gcode_macro PRINTER_TEMPS_VALUE"].hotend0_temp}
    {% else %}
    M104 S{printer["gcode_macro PRINTER_TEMPS_VALUE"].hotend_temp}
    {% endif %}
    M117 Carregando Filamento
    G1 E50 F200 ;Faz uma purga para tirar sujeira de cor
    M400
    G91
    G90
    M117 Filamento Pronto

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.112
#*# pid_ki = 1.612
#*# pid_kd = 105.752
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.822
#*# pid_ki = 2.540
#*# pid_kd = 452.713
#*#
#*# [probe]
#*# z_offset = 4.409
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -3.853750, -3.036250, -2.292500, -1.556250, -0.825000
#*# 	  -2.522500, -1.730000, -0.991250, -0.238750, 0.470000
#*# 	  -1.196250, -0.423750, 0.322500, 1.056250, 1.736250
#*# 	  0.122500, 0.912500, 1.617500, 2.306250, 2.975000
#*# x_count = 5
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 283.0
#*# min_y = 24.0
#*# max_y = 153.99
